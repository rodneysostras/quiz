{"version":3,"sources":["context/quiz-system/index.js","context/quiz-report/index.jsx","components/title/index.js","components/number-switch/styled.js","components/number-switch/index.jsx","service/opentdb.js","pages/home/styled.js","pages/home/index.jsx","context/quiz-questions/index.jsx","components/question-title/styled.js","components/question-title/index.jsx","components/question-option/styled.js","components/question-option/index.jsx","components/question-info/styled.js","components/question-info/index.jsx","pages/quiz/styled.js","pages/quiz/index.js","pages/checkout/styled.js","pages/checkout/index.jsx","pages/notfound/styled.js","pages/notfound/index.jsx","pages/report/styled.js","pages/report/index.jsx","App.js","index.js"],"names":["QuizSystemContext","React","QuizSystemContextProvider","children","quizSystemStore","localStorage","getItem","JSON","parse","quizSystem","setQuizSystem","setItem","stringify","Provider","value","QuizReportContext","QuizReportContextProvider","quizReportStore","quizReport","setQuizReport","useStyles","makeStyles","title","width","fontSize","fontWeight","textAlign","Title","text","classes","Typography","variant","className","dangerouslySetInnerHTML","__html","switch","display","justifyContent","flexWrap","margin","border","borderRadius","overflow","buttonSwitch","color","buttonNegative","backgroundColor","buttonPositive","inputSwitch","cssFocused","notchedOutline","borderWidth","cssOutlinedInput","NumberSwitch","valueOf","max","min","handle","start","props","parseInt","count","setCount","handleInput","Increment","Button","onClick","Decrement","Box","sort","a","b","map","item","index","TextField","onChange","target","type","inputProps","style","padding","InputProps","inputMode","root","focused","api_opentdb","axios","create","baseURL","mapCategory","opentdb","GetQuestions","amount","category","difficulty","options","params","Promise","resolve","reject","request","then","data","response_code","error","questions","results","question","arr","incorrect_answers","correct_answer","Math","random","answer","catch","response","height","textTransform","iconExpand","transform","transition","advance","formControl","minWidth","buttonNext","reportBox","marginBottom","listStyle","alignItems","cursor","reportBoxIcon","marginLeft","paginationBox","Home","setAdvance","listReport","setListReport","navigate","useNavigate","formik","useFormik","initialValues","validate","values","onSubmit","checkout","handleSubmit","id","name","setFieldValue","Collapse","in","unmountOnExit","FormControl","InputLabel","htmlFor","Select","native","e","Object","keys","key","align","errors","length","component","slice","idx","Date","end_at","toLocaleString","score","Pagination","ceil","_","shape","QuizQuestionsContext","QuizQuestionsContextProvider","quizQuestionsStore","quizQuestions","setQuizQuestions","lineHeight","QuestionTitle","boxList","opacity","QuestionOption","callback","selected","undefined","effect","mapLetter","mapClassNames","setMapClassNames","handlerSelect","currentTarget","answer_select","dataset","Array","answer_correct","indexOf","answer_selected","update_mapClassNames","infoBox","paddingLeft","action","float","QuestionInfo","date","cost","total","percentage","footer","loading","position","animation","divider","listBox","flexDirection","Quiz","feedback","setFeedback","setLoading","current","state","setTimeout","update_quizQuestions","update_quizReport","unshift","start_at","getTime","toISOString","split","option","Divider","info","Checkout","q","handleStart","disabled","CircularProgress","size","NotFound","Report","useParams","App","CssBaseline","Container","maxWidth","fontFamily","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.242431dc.chunk.js","sourcesContent":["// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport * as React from \"react\";\r\n\r\nexport const QuizSystemContext = React.createContext();\r\n\r\nexport function QuizSystemContextProvider({ children }) {\r\n    const quizSystemStore =\r\n        localStorage.getItem(\"quiz-system\") ||\r\n        '{\"amount\":3, \"category\": 0, \"checkout\":false}';\r\n\r\n    const [quizSystem, setQuizSystem] = React.useState(\r\n        JSON.parse(quizSystemStore)\r\n    );\r\n\r\n    React.useMemo(() => {\r\n        localStorage.setItem(\"quiz-system\", JSON.stringify(quizSystem));\r\n    }, [quizSystem]);\r\n\r\n    return (\r\n        <QuizSystemContext.Provider value={[quizSystem, setQuizSystem]}>\r\n            {children}\r\n        </QuizSystemContext.Provider>\r\n    );\r\n}\r\n\r\nexport default QuizSystemContext;\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport * as React from \"react\";\r\n\r\nexport const QuizReportContext = React.createContext();\r\n\r\nexport function QuizReportContextProvider({ children }) {\r\n    const quizReportStore =\r\n        localStorage.getItem(\"quiz-report\") ||\r\n        '[]';\r\n\r\n    const [quizReport, setQuizReport] = React.useState(\r\n        JSON.parse(quizReportStore)\r\n    );\r\n\r\n    React.useMemo(() => {\r\n        localStorage.setItem(\"quiz-report\", JSON.stringify(quizReport));\r\n    }, [quizReport]);\r\n\r\n    return (\r\n        <QuizReportContext.Provider value={[quizReport, setQuizReport]}>\r\n            {children}\r\n        </QuizReportContext.Provider>\r\n    );\r\n}\r\n\r\nexport default QuizReportContext;\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport * as React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    title: {\r\n        width: \"100%\",\r\n        fontSize: \"24px\",\r\n        fontWeight: 400,\r\n        textAlign: \"center\",\r\n    },\r\n}));\r\n\r\nexport default function Title({ text }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <header>\r\n            <Typography\r\n                variant=\"h2\"\r\n                className={classes.title}\r\n                dangerouslySetInnerHTML={{ __html: text }}\r\n            />\r\n        </header>\r\n    );\r\n}\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    switch: {\r\n        display: \"flex\",\r\n        justifyContent: \"Center\",\r\n        flexWrap: \"nowrap\",\r\n        width: \"320px\",\r\n        margin: \"25px auto\",\r\n        border: \"1px solid #0000003b\",\r\n        borderRadius: \"15px\",\r\n        overflow: \"hidden\",\r\n    },\r\n    buttonSwitch: {\r\n        fontSize: \"1.125rem\",\r\n        color: \"#fff\",\r\n        borderRadius: 0,\r\n        border: 0,\r\n    },\r\n    buttonNegative: {\r\n        backgroundColor: \"#ff574d\",\r\n        \"&:hover\": {\r\n            color: \"#ff574d\",\r\n        },\r\n    },\r\n    buttonPositive: {\r\n        backgroundColor: \"#89c16e\",\r\n        \"&:hover\": {\r\n            color: \"#89c16e\",\r\n        },\r\n    },\r\n    inputSwitch: {\r\n        textAlign: \"center\",\r\n        width: \"64px\",\r\n        fontSize: \"24px\",\r\n    },\r\n    cssFocused: {},\r\n    notchedOutline: {\r\n        borderWidth: \"0\",\r\n    },\r\n    cssOutlinedInput: {\r\n        \"&$cssFocused $notchedOutline\": {\r\n            borderWidth: \"0\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport * as React from 'react';\r\n\r\nimport {Box, Button, TextField} from \"@material-ui/core\";\r\n\r\nimport useStyles from \"./styled\";\r\n\r\nexport default function NumberSwitch({valueOf, max, min, handle, start = 0, ...props}) {\r\n    const [count, setCount] = React.useState(parseInt(start));\r\n    const classes = useStyles();\r\n\r\n    max = parseInt(max);\r\n    min = parseInt(min);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    React.useMemo(()=> handle(count), [count]);\r\n\r\n    function handleInput(value) {\r\n        if(value !== \"\") {\r\n            parseInt(value)\r\n        }\r\n\r\n        if(value < min) {\r\n            setCount(min);\r\n        } else if(value > max) {\r\n            setCount(max);\r\n        } else {\r\n            setCount(parseInt(value));\r\n        }\r\n        \r\n    }\r\n    \r\n    function Increment({value}) {\r\n        return (<Button className={`${classes.buttonSwitch} ${classes.buttonPositive}`} onClick={() => handleInput(count + value)}> +{value}</Button>);\r\n    }\r\n\r\n    function Decrement({value}) {\r\n        return (<Button className={`${classes.buttonSwitch} ${classes.buttonNegative}`} onClick={() => handleInput(count - value)}>-{value}</Button>);\r\n    }\r\n\r\n    return (\r\n    <Box className={classes.switch}>\r\n        { valueOf.sort((a, b) => b - a).map((item, index) => (<Decrement value={item} key={index}/>)) }\r\n        <TextField\r\n            {...props}\r\n            value={count}\r\n            onChange={({target}) => handleInput(target.value)}\r\n            type=\"number\"\r\n            className={classes.inputSwitch}\r\n            variant=\"outlined\"\r\n            inputProps={{\r\n                    style: {\r\n                        textAlign: \"center\",\r\n                        padding: \"18.5px 4px\",\r\n                    },\r\n                }}\r\n                InputProps={{\r\n                    inputMode: \"numeric\",\r\n                    classes: {\r\n                        root: classes.cssOutlinedInput,\r\n                        focused: classes.cssFocused,\r\n                        notchedOutline: classes.notchedOutline,\r\n                    },\r\n                }}    \r\n        />\r\n        { valueOf.sort((a, b) => a - b).map((item, index) => (<Increment value={item} key={index}/>)) }\r\n    </Box>\r\n    );\r\n};\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport axios from \"axios\";\r\n\r\nconst api_opentdb = axios.create({\r\n    baseURL: \"https://opentdb.com/api.php\",\r\n});\r\n\r\nexport const mapCategory = {\r\n    0: \"Any Category\",\r\n    9: \"General Knowledge\",\r\n    10: \"Entertainment: Books\",\r\n    11: \"Entertainment: Film\",\r\n    12: \"Entertainment: Music\",\r\n    13: \"Entertainment: Musicals &amp; Theatres\",\r\n    14: \"Entertainment: Television\",\r\n    15: \"Entertainment: Video Games\",\r\n    16: \"Entertainment: Board Games\",\r\n    17: \"Science &amp; Nature\",\r\n    18: \"Science: Computers\",\r\n    19: \"Science: Mathematics\",\r\n    20: \"Mythology\",\r\n    21: \"Sports\",\r\n    22: \"Geography\",\r\n    23: \"History\",\r\n    24: \"Politics\",\r\n    25: \"Art\",\r\n    26: \"Celebrities\",\r\n    27: \"Animals\",\r\n    28: \"Vehicles\",\r\n    29: \"Entertainment: Comics\",\r\n    30: \"Science: Gadgets\",\r\n    31: \"Entertainment: Japanese Anime &amp; Manga\",\r\n    32: \"Entertainment: Cartoon &amp; Animations\",\r\n};\r\n\r\nexport const opentdb = {\r\n    GetQuestions: async (amount, category = 0, difficulty = 0, type = 0) => {\r\n        const options = {\r\n            params: { amount, category, difficulty, type },\r\n        };\r\n        return new Promise((resolve, reject) => {\r\n            api_opentdb\r\n                .request(options)\r\n                .then(({ data }) => {\r\n                    if (data.response_code !== 0) {\r\n                        return reject({ error: data.response_code });\r\n                    }\r\n                    const shuffle = (arr) =>\r\n                        arr.sort(() => 0.5 - Math.random());\r\n\r\n                    const questions = data.results.map((item) => ({\r\n                        question: item.question,\r\n                        options: shuffle([\r\n                            ...item.incorrect_answers,\r\n                            item.correct_answer,\r\n                        ]),\r\n                        answer: item.correct_answer,\r\n                    }));\r\n\r\n                    resolve(questions);\r\n                })\r\n                .catch(({ response }) => {\r\n                    reject(response);\r\n                });\r\n        });\r\n    },\r\n};\r\n\r\nexport default opentdb;\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    error: {\r\n        height: \"20px\",\r\n        fontWeight: 500,\r\n        color: \"red\",\r\n        textTransform: \"uppercase\",\r\n    },\r\n    iconExpand: {\r\n        transform: \"rotate(0deg)\",\r\n        transition: \"fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n    },\r\n    advance: {\r\n        fontSize: \"0.625rem\",\r\n        fontWeight: \"400\",\r\n        color: \"#424242\",\r\n        '&[aria-expanded=\"true\"] $iconExpand': {\r\n            transform: \"rotate(180deg)\",\r\n        },\r\n    },\r\n    formControl: {\r\n        minWidth: 120,\r\n    },\r\n    buttonNext: {\r\n        width: \"150px\",\r\n        margin: \"15px auto\",\r\n    },\r\n    reportBox: {\r\n        \"& > h3\": {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            textTransform: \"uppercase\",\r\n            marginBottom: \"0.313rem\",\r\n        },\r\n        \"& > ul\": {\r\n            listStyle: \"none\",\r\n            borderRadius: \"15px\",\r\n            overflow: \"hidden\",\r\n            \"& > li\": {\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-between\",\r\n                padding: \"5px 15px\",\r\n                backgroundColor: \"#fff\",\r\n                fontSize: \"0.75rem\",\r\n                \"&:nth-child(2n-1)\": {\r\n                    backgroundColor: \"#0000001f\",\r\n                },\r\n                \"&:hover\": {\r\n                    backgroundColor: \"#00000030\",\r\n                    cursor: \"pointer\",\r\n                },\r\n            },\r\n        },\r\n    },\r\n    reportBoxIcon: {\r\n        fontSize: \"1.25rem\",\r\n        marginLeft: \"10px\",\r\n    },\r\n    paginationBox: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        padding: \"10px\",\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport * as React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Collapse,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Pagination } from '@material-ui/lab';\r\n\r\nimport QuizSystemContext from \"../../context/quiz-system\";\r\nimport QuizReportContext from \"../../context/quiz-report\";\r\n\r\nimport HeaderTitle from \"../../components/title\";\r\nimport NumberSwitch from \"../../components/number-switch\";\r\n\r\nimport { mapCategory } from \"../../service/opentdb\";\r\n\r\nimport useStyles from \"./styled\";\r\n\r\nexport default function Home() {\r\n    const [quizReport] = React.useContext(QuizReportContext);\r\n    const [quizSystem, setQuizSystem] = React.useContext(QuizSystemContext);\r\n    const [advance, setAdvance] = React.useState(false);\r\n    const [listReport, setListReport] = React.useState(1);\r\n    const navigate = useNavigate();\r\n    const classes = useStyles();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            amount: quizSystem.amount,\r\n            category: quizSystem.category,\r\n        },\r\n        validate: (values) => {\r\n            if (values.amount === \"\") {\r\n                return { amount: \"Enter the amount.\" };\r\n            }\r\n\r\n            const amount = parseInt(values.amount);\r\n\r\n            if (amount < 1) {\r\n                return { amount: \"less than 1, very small amount.\" };\r\n            }\r\n\r\n            if (amount > 50)\r\n                return { amount: \"greater than 50, very large amount.\" };\r\n        },\r\n        onSubmit: (values) => {\r\n            setQuizSystem({\r\n                amount: values.amount,\r\n                category: values.category,\r\n                checkout: true,\r\n            });\r\n            navigate(\"/checkout\");\r\n        },\r\n    });\r\n\r\n    function handleListReport(_, value) {\r\n        setListReport(value)\r\n    }\r\n\r\n    function handleAmountChange(value) {\r\n        formik.setFieldValue(\"amount\", value);\r\n    }\r\n\r\n    function handleCategoryChange(value) {\r\n        formik.setFieldValue(\"category\", value);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <HeaderTitle text=\"Choose number of questions.\" />\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <NumberSwitch\r\n                    id=\"amount\"\r\n                    name=\"amount\"\r\n                    min={0}\r\n                    max={99}\r\n                    start={quizSystem.amount}\r\n                    handle={handleAmountChange}\r\n                    valueOf={[1, 5]}\r\n                />\r\n                <Box>\r\n                    <Button\r\n                        className={classes.advance}\r\n                        onClick={() => setAdvance(!advance)}\r\n                        aria-expanded={advance}\r\n                    >\r\n                        <ExpandMoreIcon className={classes.iconExpand} />\r\n                        ADVANCE\r\n                    </Button>\r\n                    <Collapse\r\n                        in={advance}\r\n                        unmountOnExit\r\n                        style={{ padding: \"10px\" }}\r\n                    >\r\n                        <FormControl\r\n                            variant=\"filled\"\r\n                            className={classes.formControl}\r\n                        >\r\n                            <InputLabel htmlFor=\"labelCategory\">\r\n                                Select Category\r\n                            </InputLabel>\r\n                            <Select\r\n                                native\r\n                                id=\"labelCategory\"\r\n                                value={formik.values.category}\r\n                                onChange={(e) =>\r\n                                    handleCategoryChange(e.target.value)\r\n                                }\r\n                            >\r\n                                {Object.keys(mapCategory).map((key) => (\r\n                                    <option value={key}>\r\n                                        {mapCategory[key]}\r\n                                    </option>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Collapse>\r\n                </Box>\r\n                <Box textAlign=\"center\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className={classes.buttonNext}\r\n                    >\r\n                        Next\r\n                    </Button>\r\n                </Box>\r\n                <Box align=\"center\" className={classes.error}>\r\n                    {formik.errors.amount ? (\r\n                        <span>{formik.errors.amount}</span>\r\n                    ) : null}\r\n                </Box>\r\n            </form>\r\n            { quizReport.length > 0 && (\r\n                <Box className={classes.reportBox} component=\"section\">\r\n                    <h3>Last quiz</h3>\r\n                    <ul>\r\n                        {quizReport.slice((listReport - 1) * 4, listReport * 4).map((item, idx) => (\r\n                            <li onClick={() => navigate(`/report/${((listReport - 1) * 4) + idx}`)}>\r\n                                <div>\r\n                                    <strong>{((listReport - 1) * 4) + idx + 1} - </strong>\r\n                                    {new Date(item.end_at).toLocaleString(\"en\")}\r\n                                </div>\r\n                                <div>\r\n                                    <span>{`${item.score}/${item.questions.length} score`}</span>\r\n                                    <span className={classes.reportBoxIcon}>→</span>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <Box className={classes.paginationBox}>\r\n                        <Pagination count={Math.ceil(quizReport.length / 4)} onChange={handleListReport} variant=\"outlined\" shape=\"rounded\"/>\r\n                    </Box>\r\n                </Box>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n}\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport * as React from \"react\";\r\n\r\nexport const QuizQuestionsContext = React.createContext();\r\n\r\nexport function QuizQuestionsContextProvider({ children }) {\r\n    const quizQuestionsStore =\r\n        localStorage.getItem(\"quiz-questions\") ||\r\n        '{\"timestamp\": 0, \"current\":0, \"score\": 0, \"questions\": []}';\r\n\r\n    const [quizQuestions, setQuizQuestions] = React.useState(\r\n        JSON.parse(quizQuestionsStore)\r\n    );\r\n\r\n    React.useMemo(() => {\r\n        localStorage.setItem(\"quiz-questions\", JSON.stringify(quizQuestions));\r\n    }, [quizQuestions]);\r\n\r\n    return (\r\n        <QuizQuestionsContext.Provider value={[quizQuestions, setQuizQuestions]}>\r\n            {children}\r\n        </QuizQuestionsContext.Provider>\r\n    );\r\n}\r\n\r\nexport default QuizQuestionsContext;\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    title: {\r\n        fontSize: \"1rem\",\r\n        fontWeight: 400,\r\n        lineHeight: 1,\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","//  ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n//  │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n//  │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n//  │ maintenance of the copyright notice.                                                         │\r\n//  │ For more information, read the LICENSE file at the root of the project.                      │\r\n//  │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n//  └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport useStyles from \"./styled\";\r\n\r\nexport default function QuestionTitle({ index, text }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n            <span>{index} - </span>\r\n            <b dangerouslySetInnerHTML={{ __html: text }} />\r\n        </Typography>\r\n    );\r\n}\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    boxList: {\r\n        listStyle: \"none\",\r\n        \"&.chosen > li\": {\r\n            transition: \"opacity 0.6s ease-in-out\",\r\n            opacity: 0.6,\r\n            \"&:hover\": {\r\n                backgroundColor: \"#0000001f\",\r\n                cursor: \"default !important\",\r\n            },\r\n        },\r\n        \"& > li\": {\r\n            margin: \"5px\",\r\n            padding: \"5px\",\r\n            border: \"1px solid #3e3e3e\",\r\n            backgroundColor: \"#0000001f\",\r\n            \"&:hover\": {\r\n                backgroundColor: \"#00000030\",\r\n                cursor: \"pointer\",\r\n            },\r\n            \"&.selected\": {\r\n                backgroundColor: \"#ff574d !important\",\r\n                border: \"1px solid red\",\r\n                opacity: 1,\r\n            },\r\n            \"&.answer\": {\r\n                backgroundColor: \"#89c16e !important\",\r\n                border: \"1px solid green\",\r\n                opacity: 1,\r\n            },\r\n            \"&.opacity-effect\": {\r\n                transition: \"background 0.6s ease-in-out\",\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport * as React from 'react';\r\nimport useStyles from \"./styled\";\r\n\r\nexport default function QuestionOption({options, answer, callback, selected = undefined, effect = false}) {\r\n    const mapLetter = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'];\r\n    const [mapClassNames, setMapClassNames] = React.useState([]);\r\n    const classes = useStyles();\r\n\r\n    React.useMemo(() => {\r\n        \r\n        if (selected === undefined) {\r\n            setMapClassNames(Array(options.length));\r\n        } else {\r\n            const answer_correct = options.indexOf(answer);\r\n            const answer_selected = options.indexOf(selected);\r\n\r\n            let update_mapClassNames = Array(options.length);\r\n\r\n            update_mapClassNames[answer_selected] = 'selected';\r\n            update_mapClassNames[answer_correct] = 'answer';\r\n\r\n            setMapClassNames(update_mapClassNames);\r\n        }\r\n    }, [options, answer, selected]);\r\n\r\n    function handlerSelect({currentTarget}) {\r\n        if(selected !== undefined) return;\r\n        \r\n        const answer_select = currentTarget.dataset.id;\r\n\r\n        callback(options[answer_select]);\r\n    }\r\n\r\n    return(\r\n        <ul className={`${classes.boxList} ${selected !== undefined ? 'chosen' : ''}`}>\r\n            {options.map((item, idx) => (\r\n            <li key={idx} data-id={idx} onClick={handlerSelect} className={`${mapClassNames[idx]}${effect ? ' opacity-effect' : ''}`}>\r\n                <b>{mapLetter[idx]} - </b>\r\n                <span dangerouslySetInnerHTML={{ __html: item}} />\r\n            </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    infoBox: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: \"70%\",\r\n        margin: \"0 auto\",\r\n        marginBottom: \"1rem\",\r\n        \"& > span\": {\r\n            fontSize: \"3rem\",\r\n        },\r\n        \"& > div\": {\r\n            paddingLeft: \"1rem\",\r\n            \"& > p\": {\r\n                width: \"100%\",\r\n                textAlign: \"center\",\r\n                fontSize: \"0.75rem\",\r\n            },\r\n        },\r\n    },\r\n    action: {\r\n        padding: \"10px 15px\",\r\n        \"& > button\": {\r\n            float: \"right\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport * as React from 'react';\r\n\r\nimport {Box} from '@material-ui/core';\r\n\r\nimport useStyles from './styled';\r\n\r\nexport default function QuestionInfo({date, cost, score, total, percentage}){\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <Box className={classes.infoBox}>\r\n                <span>{`${\r\n                    percentage < 30\r\n                        ? \"☹️\"\r\n                        : percentage < 60\r\n                        ? \"😕\"\r\n                        : percentage < 90\r\n                        ? \"🙂\"\r\n                        : \"🤩\"\r\n                }`}</span>\r\n                <div>\r\n                    <p>\r\n                        {`${new Date(date).toLocaleString(\r\n                            \"en\"\r\n                        )}`}\r\n                    </p>\r\n                    <p>\r\n                        <b>Hits: </b>\r\n                        {`${score}/${total} (${percentage}%)`}\r\n                    </p>\r\n                    <p>\r\n                        <b>Testing time: </b>\r\n                        {cost}\r\n                    </p>\r\n                </div>\r\n            </Box>\r\n    );\r\n}\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    footer: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        width: \"80%\",\r\n        padding: \"10px 0\",\r\n        margin: \"0 auto\",\r\n        fontSize: \"0.75rem\",\r\n    },\r\n    loading: {\r\n        position: \"relative\",\r\n        display: \"inline-block\",\r\n        animation: `$spin 1000ms infinite linear`,\r\n    },\r\n    \"@keyframes spin\": {\r\n        \"0%\": {\r\n            transform: \"rotate(0deg)\",\r\n        },\r\n        \"100%\": {\r\n            transform: \"rotate(360deg)\",\r\n        },\r\n    },\r\n    infoBox: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: \"70%\",\r\n        margin: \"0 auto\",\r\n        marginBottom: \"1rem\",\r\n        \"& > span\": {\r\n            fontSize: \"3rem\",\r\n        },\r\n        \"& > div\": {\r\n            paddingLeft: \"1rem\",\r\n            \"& > p\": {\r\n                width: \"100%\",\r\n                textAlign: \"center\",\r\n                fontSize: \"0.75rem\",\r\n            },\r\n        },\r\n    },\r\n    divider: {\r\n        width: \"70%\",\r\n        margin: \"0 auto\",\r\n        marginBottom: \"1rem\",\r\n    },\r\n    listBox: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n        width: \"100%\",\r\n        margin: \"1rem 0\",\r\n        listStyle: \"none\",\r\n        \"& > li\": {\r\n            height: \"19px\",\r\n            width: \"25px\",\r\n            padding: \"2px 0\",\r\n            margin: \"5px\",\r\n            fontSize: \"0.625rem\",\r\n            textAlign: \"center\",\r\n            cursor: \"pointer\",\r\n            \"&.correct\": {\r\n                backgroundColor: \"#89c16e\",\r\n                border: \"1px solid green\",\r\n            },\r\n            \"&.wrong\": {\r\n                backgroundColor: \"#ff574d\",\r\n                border: \"1px solid red\",\r\n            },\r\n        },\r\n    },\r\n    action: {\r\n        padding: \"10px 15px\",\r\n        \"& > button\": {\r\n            float: \"right\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport * as React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { Box, Button, Divider } from \"@material-ui/core\";\r\n\r\nimport QuizQuestionsContext from \"../../context/quiz-questions\";\r\nimport QuizReportContext from \"../../context/quiz-report\";\r\n\r\nimport QuestionTitle from \"../../components/question-title\";\r\nimport QuestionOption from \"../../components/question-option\";\r\nimport QuestionInfo from \"../../components/question-info\";\r\nimport HeaderTitle from \"../../components/title\";\r\n\r\nimport useStyles from \"./styled\";\r\n\r\nexport default function Quiz() {\r\n    const [quizQuestions, setQuizQuestions] =\r\n        React.useContext(QuizQuestionsContext);\r\n    const [quizReport, setQuizReport] = React.useContext(QuizReportContext);\r\n    const [feedback, setFeedback] = React.useState(0);\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    const navigate = useNavigate();\r\n    const classes = useStyles();\r\n\r\n    function checkAnswer(option) {\r\n        return option.selected === option.answer;\r\n    }\r\n\r\n    function handleAnswer(value) {\r\n        setLoading(true);\r\n        setQuizQuestions((state) => {\r\n            const current = parseInt(state.current);\r\n            const answer = state.questions[current].answer;\r\n\r\n            if (answer === value) {\r\n                state.score++;\r\n            }\r\n\r\n            state.questions[current].selected = value;\r\n\r\n            return state;\r\n        });\r\n\r\n        setTimeout(() => {\r\n            const update_quizQuestions = { ...quizQuestions };\r\n            update_quizQuestions.current++;\r\n\r\n            if (\r\n                update_quizQuestions.current === quizQuestions.questions.length\r\n            ) {\r\n                const update_quizReport = [...quizReport];\r\n\r\n                update_quizReport.unshift({\r\n                    questions: [...quizQuestions.questions],\r\n                    score: quizQuestions.score,\r\n                    percentage: parseInt(\r\n                        (quizQuestions.score / quizQuestions.questions.length) *\r\n                            100\r\n                    ),\r\n                    start_at: quizQuestions.start_at,\r\n                    end_at: new Date().getTime(),\r\n                });\r\n\r\n                setQuizReport(update_quizReport);\r\n            }\r\n\r\n            setQuizQuestions(update_quizQuestions);\r\n            setLoading(false);\r\n        }, 1300);\r\n    }\r\n\r\n    return quizQuestions.questions[quizQuestions.current] ? (\r\n        <React.Fragment>\r\n            <QuestionTitle\r\n                index={quizQuestions.current + 1}\r\n                text={quizQuestions.questions[quizQuestions.current].question}\r\n            />\r\n            <QuestionOption\r\n                effect={true}\r\n                options={quizQuestions.questions[quizQuestions.current].options}\r\n                answer={quizQuestions.questions[quizQuestions.current].answer}\r\n                selected={\r\n                    quizQuestions.questions[quizQuestions.current].selected\r\n                }\r\n                callback={handleAnswer}\r\n            />\r\n            <footer className={classes.footer}>\r\n                <span>\r\n                    <b>{quizQuestions.score}</b>/\r\n                    {quizQuestions.questions.length} score\r\n                </span>\r\n                {loading && (\r\n                    <b>\r\n                        loading next question...\r\n                        <span className={classes.loading}>⏳</span>\r\n                    </b>\r\n                )}\r\n            </footer>\r\n        </React.Fragment>\r\n    ) : (\r\n        <React.Fragment>\r\n            <QuestionInfo\r\n                date={quizReport[0].end_at}\r\n                cost={\r\n                    new Date(quizReport[0].end_at - quizReport[0].start_at)\r\n                        .toISOString()\r\n                        .split(\"T\")[1]\r\n                        .split(\".\")[0]\r\n                }\r\n                score={quizReport[0].score}\r\n                total={quizReport[0].questions.length}\r\n                percentage={parseInt(\r\n                    (quizReport[0].score / quizReport[0].questions.length) * 100\r\n                )}\r\n            />\r\n            <HeaderTitle text=\"Click on the question to verify\" />\r\n            <ul className={classes.listBox}>\r\n                {quizReport[0].questions.map((item, idx) => (\r\n                    <li\r\n                        key={idx}\r\n                        className={\r\n                            checkAnswer(quizReport[0].questions[idx])\r\n                                ? \"correct\"\r\n                                : \"wrong\"\r\n                        }\r\n                        onClick={() => setFeedback(idx)}\r\n                    >\r\n                        {idx + 1}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <Divider className={classes.divider} />\r\n            <QuestionTitle\r\n                index={feedback + 1}\r\n                text={quizReport[0].questions[feedback].question}\r\n            />\r\n            <QuestionOption\r\n                options={quizReport[0].questions[feedback].options}\r\n                answer={quizReport[0].questions[feedback].answer}\r\n                selected={quizReport[0].questions[feedback].selected}\r\n            />\r\n            <Box className={classes.action}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => navigate(\"/\")}\r\n                >\r\n                    HOME\r\n                </Button>\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    title: {\r\n        width: \"100%\",\r\n        fontSize: \"24px\",\r\n        fontWeight: 400,\r\n        textAlign: \"center\",\r\n    },\r\n    action: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        width: \"80%\",\r\n        margin: \"0 auto\",\r\n    },\r\n\r\n    info: {\r\n        width: \"70%\",\r\n        margin: \"25px auto\",\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\nimport * as React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Box, Button, CircularProgress } from \"@material-ui/core\";\r\n\r\nimport { QuizSystemContext } from \"../../context/quiz-system\";\r\nimport { QuizQuestionsContext } from \"../../context/quiz-questions\";\r\nimport HeaderTitle from \"../../components/title\";\r\n\r\nimport useStyles from \"./styled\";\r\n\r\nimport opentdb, { mapCategory } from \"../../service/opentdb\";\r\n\r\nexport default function Checkout() {\r\n    const [quizSystem, setQuizSystem] = React.useContext(QuizSystemContext);\r\n    // eslint-disable-next-line \r\n    const [_, setQuizQuestions] = React.useContext(QuizQuestionsContext);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const navigate = useNavigate();\r\n    const classes = useStyles();\r\n\r\n    async function handleStart() {\r\n        setLoading(true);\r\n        opentdb\r\n            .GetQuestions(quizSystem.amount, quizSystem.category)\r\n            .then((q) => {\r\n                setQuizQuestions({\r\n                    start_at: new Date().getTime(),\r\n                    score: 0,\r\n                    current: 0,\r\n                    questions: q,\r\n                });\r\n                setTimeout(() => navigate(\"/quiz\"), 2100);\r\n            });\r\n    }\r\n\r\n    function handleCancel() {\r\n        setQuizSystem({ ...quizSystem, checkout: false });\r\n        navigate(\"/\");\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <HeaderTitle text=\"Press start if you agree.\" />\r\n            <Box className={classes.info}>\r\n                <p>\r\n                    Number of questions: <b>{quizSystem.amount}</b>\r\n                </p>\r\n                <p>\r\n                    Selected category: <b>{mapCategory[quizSystem.category]}</b>\r\n                </p>\r\n            </Box>\r\n            <Box className={classes.action}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => handleCancel()}\r\n                >\r\n                    CANCEL\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => handleStart()}\r\n                    disabled={loading}\r\n                >\r\n                    {loading ? <CircularProgress size=\"24px\" /> : \"START\"}\r\n                </Button>\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\n// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    error: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        textAlign: \"center\",\r\n        fontSize: \"3rem\",\r\n        marginBottom: \"1rem\",\r\n        \"& > p\": {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n        },\r\n    },\r\n    action: {\r\n        width: \"60%\",\r\n        margin: \"0 auto\",\r\n        marginBottom: \"1rem\",\r\n        \"& > button\": {\r\n            marginLeft: \"100%\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport * as React from 'react';\r\nimport { useNavigate } from 'react-router';\r\n\r\nimport { Box, Button } from '@material-ui/core';\r\n\r\nimport useStyles from './styled';\r\n\r\nexport default function NotFound() {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box className={classes.error}><p><span>😓</span>Not Found</p></Box>\r\n            <Box className={classes.action}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => navigate(\"/\")}\r\n                >\r\n                    HOME\r\n                </Button>\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    divider: {\r\n        width: \"70%\",\r\n        margin: \"1.563rem auto\",\r\n    },\r\n    error: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        textAlign: \"center\",\r\n        fontSize: \"3rem\",\r\n        marginBottom: \"1rem\",\r\n        \"& > p\": {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n        },\r\n    },\r\n    action: {\r\n        width: \"60%\",\r\n        margin: \"0 auto\",\r\n        marginBottom: \"1rem\",\r\n        \"& > button\": {\r\n            marginLeft: \"100%\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport * as React from 'react';\r\nimport {  useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport { Box, Button, Divider } from '@material-ui/core';\r\n\r\nimport QuizReportContext from \"../../context/quiz-report\";\r\n\r\nimport QuestionTitle from '../../components/question-title';\r\nimport QuestionOption from '../../components/question-option';\r\nimport QuestionInfo from '../../components/question-info';\r\n\r\nimport NotFound from '../../pages/notfound';\r\n\r\nimport useStyles from './styled';\r\n\r\nexport default function Report() {\r\n    const {id} = useParams();\r\n    const [quizReport] = React.useContext(QuizReportContext);\r\n    const navigate = useNavigate();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            { quizReport[id] ? (\r\n            <React.Fragment>\r\n                <QuestionInfo\r\n                    date={quizReport[id].end_at}\r\n                    cost={new Date(quizReport[id].end_at - quizReport[id].start_at).toISOString()\r\n                        .split(\"T\")[1]\r\n                        .split(\".\")[0]}\r\n                    score={quizReport[id].score}\r\n                    total={quizReport[id].questions.length}\r\n                    percentage={parseInt((quizReport[id].score / quizReport[id].questions.length) * 100)}\r\n               \r\n                 />\r\n                 <Divider className={classes.divider}/>\r\n                {quizReport[id].questions.map((item, idx) => (\r\n                    <React.Fragment>\r\n                        <QuestionTitle\r\n                        index={idx + 1}\r\n                        text={item.question}\r\n                        />\r\n                    <QuestionOption\r\n                        options={item.options}\r\n                        answer={item.answer}\r\n                        selected={\r\n                            item.selected\r\n                        }\r\n                    />\r\n                    <Divider className={classes.divider}/>\r\n                 </React.Fragment>\r\n                ))}\r\n                <Box className={classes.action}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => navigate(\"/\")}\r\n                    >\r\n                        HOME\r\n                    </Button>\r\n                </Box>\r\n            </React.Fragment>\r\n            ) : (\r\n              <NotFound />\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n}\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport * as React from \"react\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { Box, Container, Divider, Typography } from \"@material-ui/core\";\r\n\r\nimport Home from \"./pages/home\";\r\nimport Quiz from \"./pages/quiz\";\r\nimport Checkout from \"./pages/checkout\";\r\nimport Report from \"./pages/report\";\r\nimport NotFound from \"./pages/notfound\";\r\n\r\nexport default function App() {\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <Container\r\n                maxWidth=\"sm\"\r\n                style={{ margin: \"2rem 0\" }}\r\n                component=\"main\"\r\n            >\r\n                <Box component=\"header\">\r\n                    <Typography\r\n                        variant=\"h1\"\r\n                        align=\"center\"\r\n                        style={{\r\n                            width: \"100%\",\r\n                            fontFamily: \"'Fascinate Inline', cursive\",\r\n                            fontSize: \"64px\",\r\n                        }}\r\n                    >\r\n                        QUIZ\r\n                    </Typography>\r\n                </Box>\r\n                <Divider />\r\n                <Box padding=\"10px\" component=\"article\">\r\n                    <BrowserRouter>\r\n                        <Routes>\r\n                            <Route exact path=\"/\" element={<Home />} />\r\n                            <Route path=\"/checkout\" element={<Checkout />} />\r\n                            <Route path=\"/quiz\" element={<Quiz />} />\r\n                            <Route path=\"/report/:id\" element={<Report />} />\r\n                            <Route path=\"*\" element={<NotFound />} />\r\n                        </Routes>\r\n                    </BrowserRouter>\r\n                </Box>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport * as React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nimport { QuizSystemContextProvider } from \"./context/quiz-system\";\r\nimport { QuizReportContextProvider } from \"./context/quiz-report\";\r\nimport { QuizQuestionsContextProvider } from \"./context/quiz-questions\";\r\n\r\nimport \"./theme/globalstyle.css\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <QuizSystemContextProvider>\r\n            <QuizReportContextProvider>\r\n                <QuizQuestionsContextProvider>\r\n                    <App />\r\n                </QuizQuestionsContextProvider>\r\n            </QuizReportContextProvider>\r\n        </QuizSystemContextProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}