{"version":3,"sources":["context/quiz-system/index.js","context/quiz-report/index.jsx","components/title/index.js","components/number-switch/styled.js","components/number-switch/index.jsx","service/opentdb.js","pages/home/styled.js","pages/home/index.jsx","context/quiz-questions/index.jsx","components/question-title/styled.js","components/question-title/index.jsx","components/question-option/styled.js","components/question-option/index.jsx","components/question-info/styled.js","components/question-info/index.jsx","pages/quiz/styled.js","pages/quiz/index.js","pages/checkout/styled.js","pages/checkout/index.jsx","pages/notfound/styled.js","pages/notfound/index.jsx","pages/report/styled.js","pages/report/index.jsx","App.js","index.js"],"names":["QuizSystemContext","React","QuizSystemContextProvider","children","quizSystemStore","localStorage","getItem","JSON","parse","quizSystem","setQuizSystem","setItem","stringify","Provider","value","QuizReportContext","QuizReportContextProvider","quizReportStore","quizReport","setQuizReport","useStyles","makeStyles","title","width","fontSize","fontWeight","textAlign","Title","text","classes","Typography","variant","className","dangerouslySetInnerHTML","__html","switch","display","justifyContent","flexWrap","margin","border","borderRadius","overflow","buttonSwitch","color","buttonNegative","backgroundColor","buttonPositive","inputSwitch","cssFocused","notchedOutline","borderWidth","cssOutlinedInput","NumberSwitch","valueOf","max","min","handle","start","props","parseInt","count","setCount","handleInput","Increment","Button","onClick","Decrement","Box","sort","a","b","map","item","index","TextField","onChange","target","type","inputProps","style","padding","InputProps","inputMode","root","focused","api_opentdb","axios","create","baseURL","mapCategory","opentdb","GetQuestions","amount","category","difficulty","options","params","Promise","resolve","reject","request","then","data","response_code","error","questions","results","question","arr","incorrect_answers","correct_answer","Math","random","answer","catch","response","height","textTransform","iconExpand","transform","transition","advance","formControl","minWidth","buttonNext","reportBox","listStyle","alignItems","paddingLeft","cursor","paginationBox","Home","setAdvance","listReport","setListReport","navigate","useNavigate","formik","useFormik","initialValues","validate","values","onSubmit","checkout","handleSubmit","id","name","setFieldValue","Collapse","in","unmountOnExit","FormControl","InputLabel","htmlFor","Select","native","e","Object","keys","key","align","errors","length","slice","idx","Date","end_at","toLocaleString","score","Pagination","ceil","_","shape","QuizQuestionsContext","QuizQuestionsContextProvider","quizQuestionsStore","quizQuestions","setQuizQuestions","lineHeight","QuestionTitle","boxList","opacity","QuestionOption","callback","selected","undefined","effect","mapLetter","mapClassNames","setMapClassNames","handlerSelect","currentTarget","answer_select","dataset","Array","answer_correct","indexOf","answer_selected","update_mapClassNames","infoBox","marginBottom","action","float","QuestionInfo","date","cost","total","percentage","footer","loading","position","animation","divider","listBox","flexDirection","Quiz","feedback","setFeedback","setLoading","current","state","setTimeout","update_quizQuestions","update_quizReport","unshift","start_at","getTime","toISOString","split","option","Divider","info","Checkout","q","handleStart","disabled","CircularProgress","size","marginLeft","NotFound","Report","useParams","App","CssBaseline","Container","maxWidth","marginTop","fontFamily","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9dc33893.chunk.js","sourcesContent":["// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\r\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\r\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\r\n// │ maintenance of the copyright notice.                                                         │\r\n// │ For more information, read the LICENSE file at the root of the project.                      │\r\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\r\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\r\n\r\nimport * as React from \"react\";\r\n\r\nexport const QuizSystemContext = React.createContext();\r\n\r\nexport function QuizSystemContextProvider({ children }) {\r\n    const quizSystemStore =\r\n        localStorage.getItem(\"quiz-system\") ||\r\n        '{\"amount\":3, \"category\": 0, \"checkout\":false}';\r\n\r\n    const [quizSystem, setQuizSystem] = React.useState(\r\n        JSON.parse(quizSystemStore)\r\n    );\r\n\r\n    React.useMemo(() => {\r\n        localStorage.setItem(\"quiz-system\", JSON.stringify(quizSystem));\r\n    }, [quizSystem]);\r\n\r\n    return (\r\n        <QuizSystemContext.Provider value={[quizSystem, setQuizSystem]}>\r\n            {children}\r\n        </QuizSystemContext.Provider>\r\n    );\r\n}\r\n\r\nexport default QuizSystemContext;\r\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport * as React from \"react\";\n\nexport const QuizReportContext = React.createContext();\n\nexport function QuizReportContextProvider({ children }) {\n    const quizReportStore =\n        localStorage.getItem(\"quiz-report\") ||\n        '[]';\n\n    const [quizReport, setQuizReport] = React.useState(\n        JSON.parse(quizReportStore)\n    );\n\n    React.useMemo(() => {\n        localStorage.setItem(\"quiz-report\", JSON.stringify(quizReport));\n    }, [quizReport]);\n\n    return (\n        <QuizReportContext.Provider value={[quizReport, setQuizReport]}>\n            {children}\n        </QuizReportContext.Provider>\n    );\n}\n\nexport default QuizReportContext;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport * as React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n    title: {\n        width: \"100%\",\n        fontSize: \"24px\",\n        fontWeight: 400,\n        textAlign: \"center\",\n    },\n}));\n\nexport default function Title({ text }) {\n    const classes = useStyles();\n    return (\n        <header>\n            <Typography\n                variant=\"h2\"\n                className={classes.title}\n                dangerouslySetInnerHTML={{ __html: text }}\n            />\n        </header>\n    );\n}\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n    switch: {\n        display: \"flex\",\n        justifyContent: \"Center\",\n        flexWrap: \"nowrap\",\n        width: \"320px\",\n        margin: \"25px auto\",\n        border: \"1px solid #0000003b\",\n        borderRadius: \"15px\",\n        overflow: \"hidden\",\n    },\n    buttonSwitch: {\n        fontSize: \"1.125rem\",\n        color: \"#fff\",\n        borderRadius: 0,\n        border: 0,\n    },\n    buttonNegative: {\n        backgroundColor: \"#ff574d\",\n        \"&:hover\": {\n            color: \"#ff574d\",\n        },\n    },\n    buttonPositive: {\n        backgroundColor: \"#89c16e\",\n        \"&:hover\": {\n            color: \"#89c16e\",\n        },\n    },\n    inputSwitch: {\n        textAlign: \"center\",\n        width: \"64px\",\n        fontSize: \"24px\",\n    },\n    cssFocused: {},\n    notchedOutline: {\n        borderWidth: \"0\",\n    },\n    cssOutlinedInput: {\n        \"&$cssFocused $notchedOutline\": {\n            borderWidth: \"0\",\n        },\n    },\n}));\n\nexport default useStyles;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport * as React from 'react';\n\nimport {Box, Button, TextField} from \"@material-ui/core\";\n\nimport useStyles from \"./styled\";\n\nexport default function NumberSwitch({valueOf, max, min, handle, start = 0, ...props}) {\n    const [count, setCount] = React.useState(parseInt(start));\n    const classes = useStyles();\n\n    max = parseInt(max);\n    min = parseInt(min);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    React.useMemo(()=> handle(count), [count]);\n\n    function handleInput(value) {\n        if(value !== \"\") {\n            parseInt(value)\n        }\n\n        if(value < min) {\n            setCount(min);\n        } else if(value > max) {\n            setCount(max);\n        } else {\n            setCount(parseInt(value));\n        }\n        \n    }\n    \n    function Increment({value}) {\n        return (<Button className={`${classes.buttonSwitch} ${classes.buttonPositive}`} onClick={() => handleInput(count + value)}> +{value}</Button>);\n    }\n\n    function Decrement({value}) {\n        return (<Button className={`${classes.buttonSwitch} ${classes.buttonNegative}`} onClick={() => handleInput(count - value)}>-{value}</Button>);\n    }\n\n    return (\n    <Box className={classes.switch}>\n        { valueOf.sort((a, b) => b - a).map((item, index) => (<Decrement value={item} key={index}/>)) }\n        <TextField\n            {...props}\n            value={count}\n            onChange={({target}) => handleInput(target.value)}\n            type=\"number\"\n            className={classes.inputSwitch}\n            variant=\"outlined\"\n            inputProps={{\n                    style: {\n                        textAlign: \"center\",\n                        padding: \"18.5px 4px\",\n                    },\n                }}\n                InputProps={{\n                    inputMode: \"numeric\",\n                    classes: {\n                        root: classes.cssOutlinedInput,\n                        focused: classes.cssFocused,\n                        notchedOutline: classes.notchedOutline,\n                    },\n                }}    \n        />\n        { valueOf.sort((a, b) => a - b).map((item, index) => (<Increment value={item} key={index}/>)) }\n    </Box>\n    );\n};\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport axios from \"axios\";\n\nconst api_opentdb = axios.create({\n    baseURL: \"https://opentdb.com/api.php\",\n});\n\nexport const mapCategory = {\n    0: \"Any Category\",\n    9: \"General Knowledge\",\n    10: \"Entertainment: Books\",\n    11: \"Entertainment: Film\",\n    12: \"Entertainment: Music\",\n    13: \"Entertainment: Musicals &amp; Theatres\",\n    14: \"Entertainment: Television\",\n    15: \"Entertainment: Video Games\",\n    16: \"Entertainment: Board Games\",\n    17: \"Science &amp; Nature\",\n    18: \"Science: Computers\",\n    19: \"Science: Mathematics\",\n    20: \"Mythology\",\n    21: \"Sports\",\n    22: \"Geography\",\n    23: \"History\",\n    24: \"Politics\",\n    25: \"Art\",\n    26: \"Celebrities\",\n    27: \"Animals\",\n    28: \"Vehicles\",\n    29: \"Entertainment: Comics\",\n    30: \"Science: Gadgets\",\n    31: \"Entertainment: Japanese Anime &amp; Manga\",\n    32: \"Entertainment: Cartoon &amp; Animations\",\n};\n\nexport const opentdb = {\n    GetQuestions: async (amount, category = 0, difficulty = 0, type = 0) => {\n        const options = {\n            params: { amount, category, difficulty, type },\n        };\n        return new Promise((resolve, reject) => {\n            api_opentdb\n                .request(options)\n                .then(({ data }) => {\n                    if (data.response_code !== 0) {\n                        return reject({ error: data.response_code });\n                    }\n                    const shuffle = (arr) =>\n                        arr.sort(() => 0.5 - Math.random());\n\n                    const questions = data.results.map((item) => ({\n                        question: item.question,\n                        options: shuffle([\n                            ...item.incorrect_answers,\n                            item.correct_answer,\n                        ]),\n                        answer: item.correct_answer,\n                    }));\n\n                    resolve(questions);\n                })\n                .catch(({ response }) => {\n                    reject(response);\n                });\n        });\n    },\n};\n\nexport default opentdb;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n    error: {\n        height: \"20px\",\n        fontWeight: 500,\n        color: \"red\",\n        textTransform: \"uppercase\",\n    },\n    iconExpand: {\n        transform: \"rotate(0deg)\",\n        transition: \"fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n    },\n    advance: {\n        fontSize: \"0.625rem\",\n        fontWeight: \"400\",\n        color: \"#424242\",\n        '&[aria-expanded=\"true\"] $iconExpand': {\n            transform: \"rotate(180deg)\",\n        },\n    },\n    formControl: {\n        minWidth: 120,\n    },\n    buttonNext: {\n        width: \"150px\",\n        margin: \"15px auto\",\n    },\n    reportBox: {\n        \"& > ul\": {\n            listStyle: \"none\",\n            borderRadius: \"15px\",\n            overflow: \"hidden\",\n            \"& > li\": {\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                padding: \"3px\",\n                paddingLeft: \"15px\",\n                backgroundColor: \"#fff\",\n                fontSize: \"0.75rem\",\n                cursor: \"pointer\",\n                \"&:nth-child(2n-1)\": {\n                    backgroundColor: \"#0000001f\",\n                },\n            },\n        },\n    },\n    paginationBox: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"10px\",\n    },\n}));\n\nexport default useStyles;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport * as React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport {\n    Box,\n    Button,\n    Collapse,\n    FormControl,\n    InputLabel,\n    Select,\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Pagination } from '@material-ui/lab';\n\nimport QuizSystemContext from \"../../context/quiz-system\";\nimport QuizReportContext from \"../../context/quiz-report\";\n\nimport HeaderTitle from \"../../components/title\";\nimport NumberSwitch from \"../../components/number-switch\";\n\nimport { mapCategory } from \"../../service/opentdb\";\n\nimport useStyles from \"./styled\";\n\nexport default function Home() {\n    const [quizReport] = React.useContext(QuizReportContext);\n    const [quizSystem, setQuizSystem] = React.useContext(QuizSystemContext);\n    const [advance, setAdvance] = React.useState(false);\n    const [listReport, setListReport] = React.useState(1);\n    const navigate = useNavigate();\n    const classes = useStyles();\n    const formik = useFormik({\n        initialValues: {\n            amount: quizSystem.amount,\n            category: quizSystem.category,\n        },\n        validate: (values) => {\n            if (values.amount === \"\") {\n                return { amount: \"Enter the amount.\" };\n            }\n\n            const amount = parseInt(values.amount);\n\n            if (amount < 1) {\n                return { amount: \"less than 1, very small amount.\" };\n            }\n\n            if (amount > 50)\n                return { amount: \"greater than 50, very large amount.\" };\n        },\n        onSubmit: (values) => {\n            setQuizSystem({\n                amount: values.amount,\n                category: values.category,\n                checkout: true,\n            });\n            navigate(\"/checkout\");\n        },\n    });\n\n    function handleListReport(_, value) {\n        setListReport(value)\n    }\n\n    function handleAmountChange(value) {\n        formik.setFieldValue(\"amount\", value);\n    }\n\n    function handleCategoryChange(value) {\n        formik.setFieldValue(\"category\", value);\n    }\n\n    return (\n        <React.Fragment>\n            <HeaderTitle text=\"Choose number of questions.\" />\n            <form onSubmit={formik.handleSubmit}>\n                <NumberSwitch\n                    id=\"amount\"\n                    name=\"amount\"\n                    min={0}\n                    max={99}\n                    start={quizSystem.amount}\n                    handle={handleAmountChange}\n                    valueOf={[1, 5]}\n                />\n                <Box>\n                    <Button\n                        className={classes.advance}\n                        onClick={() => setAdvance(!advance)}\n                        aria-expanded={advance}\n                    >\n                        <ExpandMoreIcon className={classes.iconExpand} />\n                        ADVANCE\n                    </Button>\n                    <Collapse\n                        in={advance}\n                        unmountOnExit\n                        style={{ padding: \"10px\" }}\n                    >\n                        <FormControl\n                            variant=\"filled\"\n                            className={classes.formControl}\n                        >\n                            <InputLabel htmlFor=\"labelCategory\">\n                                Select Category\n                            </InputLabel>\n                            <Select\n                                native\n                                id=\"labelCategory\"\n                                value={formik.values.category}\n                                onChange={(e) =>\n                                    handleCategoryChange(e.target.value)\n                                }\n                            >\n                                {Object.keys(mapCategory).map((key) => (\n                                    <option value={key}>\n                                        {mapCategory[key]}\n                                    </option>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </Collapse>\n                </Box>\n                <Box textAlign=\"center\">\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        type=\"submit\"\n                        className={classes.buttonNext}\n                    >\n                        Next\n                    </Button>\n                </Box>\n                <Box align=\"center\" className={classes.error}>\n                    {formik.errors.amount ? (\n                        <span>{formik.errors.amount}</span>\n                    ) : null}\n                </Box>\n            </form>\n            { quizReport.length > 0 && (\n                <Box className={classes.reportBox}>\n                    <h3 align=\"center\">Last quiz</h3>\n                    <ul>\n                        {quizReport.slice((listReport - 1) * 4, listReport * 4).map((item, idx) => (\n                            <li>\n                                <div>\n                                    {new Date(item.end_at).toLocaleString(\"en\")}\n                                </div>\n                                <div>\n                                    <span>{`${item.score}/${item.questions.length} score`}</span>\n                                    <Button onClick={() => navigate('/report/' + idx)}>→</Button>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                    <Box className={classes.paginationBox}>\n                        <Pagination count={Math.ceil(quizReport.length / 4)} onChange={handleListReport} variant=\"outlined\" shape=\"rounded\"/>\n                    </Box>\n                </Box>\n            )}\n        </React.Fragment>\n    );\n}\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport * as React from \"react\";\n\nexport const QuizQuestionsContext = React.createContext();\n\nexport function QuizQuestionsContextProvider({ children }) {\n    const quizQuestionsStore =\n        localStorage.getItem(\"quiz-questions\") ||\n        '{\"timestamp\": 0, \"current\":0, \"score\": 0, \"questions\": []}';\n\n    const [quizQuestions, setQuizQuestions] = React.useState(\n        JSON.parse(quizQuestionsStore)\n    );\n\n    React.useMemo(() => {\n        localStorage.setItem(\"quiz-questions\", JSON.stringify(quizQuestions));\n    }, [quizQuestions]);\n\n    return (\n        <QuizQuestionsContext.Provider value={[quizQuestions, setQuizQuestions]}>\n            {children}\n        </QuizQuestionsContext.Provider>\n    );\n}\n\nexport default QuizQuestionsContext;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n    title: {\n        fontSize: \"1rem\",\n        fontWeight: 400,\n        lineHeight: 1,\n    },\n}));\n\nexport default useStyles;\n","//  ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n//  │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n//  │ This owner-supplied source code has no limitations on the condition imposed on the           │\n//  │ maintenance of the copyright notice.                                                         │\n//  │ For more information, read the LICENSE file at the root of the project.                      │\n//  │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n//  └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport { Typography } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport useStyles from \"./styled\";\n\nexport default function QuestionTitle({ index, text }) {\n    const classes = useStyles();\n    return (\n        <Typography variant=\"h6\" className={classes.title}>\n            <span>{index} - </span>\n            <b dangerouslySetInnerHTML={{ __html: text }} />\n        </Typography>\n    );\n}\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n    boxList: {\n        listStyle: \"none\",\n        \"&.chosen > li\": {\n            transition: \"opacity 0.6s ease-in-out\",\n            opacity: 0.6,\n            \"&:hover\": {\n                backgroundColor: \"#0000001f\",\n                cursor: \"default !important\",\n            },\n        },\n        \"& > li\": {\n            margin: \"5px\",\n            padding: \"5px\",\n            border: \"1px solid #3e3e3e\",\n            backgroundColor: \"#0000001f\",\n            \"&:hover\": {\n                backgroundColor: \"#00000030\",\n                cursor: \"pointer\",\n            },\n            \"&.selected\": {\n                backgroundColor: \"#ff574d !important\",\n                border: \"1px solid red\",\n                opacity: 1,\n            },\n            \"&.answer\": {\n                backgroundColor: \"#89c16e !important\",\n                border: \"1px solid green\",\n                opacity: 1,\n            },\n            \"&.opacity-effect\": {\n                transition: \"background 0.6s ease-in-out\",\n            },\n        },\n    },\n}));\n\nexport default useStyles;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport * as React from 'react';\nimport useStyles from \"./styled\";\n\nexport default function QuestionOption({options, answer, callback, selected = undefined, effect = false}) {\n    const mapLetter = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'];\n    const [mapClassNames, setMapClassNames] = React.useState([]);\n    const classes = useStyles();\n\n    React.useMemo(() => {\n        \n        if (selected === undefined) {\n            setMapClassNames(Array(options.length));\n        } else {\n            const answer_correct = options.indexOf(answer);\n            const answer_selected = options.indexOf(selected);\n\n            let update_mapClassNames = Array(options.length);\n\n            update_mapClassNames[answer_selected] = 'selected';\n            update_mapClassNames[answer_correct] = 'answer';\n\n            setMapClassNames(update_mapClassNames);\n        }\n    }, [options, answer, selected]);\n\n    function handlerSelect({currentTarget}) {\n        if(selected !== undefined) return;\n        \n        const answer_select = currentTarget.dataset.id;\n\n        callback(options[answer_select]);\n    }\n\n    return(\n        <ul className={`${classes.boxList} ${selected !== undefined ? 'chosen' : ''}`}>\n            {options.map((item, idx) => (\n            <li key={idx} data-id={idx} onClick={handlerSelect} className={`${mapClassNames[idx]}${effect ? ' opacity-effect' : ''}`}>\n                <b>{mapLetter[idx]} - </b>\n                <span dangerouslySetInnerHTML={{ __html: item}} />\n            </li>\n            ))}\n        </ul>\n    );\n}\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n    infoBox: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"70%\",\n        margin: \"0 auto\",\n        marginBottom: \"1rem\",\n        \"& > span\": {\n            fontSize: \"3rem\",\n        },\n        \"& > div\": {\n            paddingLeft: \"1rem\",\n            \"& > p\": {\n                width: \"100%\",\n                textAlign: \"center\",\n                fontSize: \"0.75rem\",\n            },\n        },\n    },\n    action: {\n        padding: \"10px 15px\",\n        \"& > button\": {\n            float: \"right\",\n        },\n    },\n}));\n\nexport default useStyles;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport * as React from 'react';\n\nimport {Box} from '@material-ui/core';\n\nimport useStyles from './styled';\n\nexport default function QuestionInfo({date, cost, score, total, percentage}){\n    const classes = useStyles();\n\n    return(\n        <Box className={classes.infoBox}>\n                <span>{`${\n                    percentage < 30\n                        ? \"☹️\"\n                        : percentage < 60\n                        ? \"😕\"\n                        : percentage < 90\n                        ? \"🙂\"\n                        : \"🤩\"\n                }`}</span>\n                <div>\n                    <p>\n                        {`${new Date(date).toLocaleString(\n                            \"en\"\n                        )}`}\n                    </p>\n                    <p>\n                        <b>Hits: </b>\n                        {`${score}/${total} (${percentage}%)`}\n                    </p>\n                    <p>\n                        <b>Testing time: </b>\n                        {cost}\n                    </p>\n                </div>\n            </Box>\n    );\n}\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n    footer: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        width: \"80%\",\n        padding: \"10px 0\",\n        margin: \"0 auto\",\n        fontSize: \"0.75rem\",\n    },\n    loading: {\n        position: \"relative\",\n        display: \"inline-block\",\n        animation: `$spin 1000ms infinite linear`,\n    },\n    \"@keyframes spin\": {\n        \"0%\": {\n            transform: \"rotate(0deg)\",\n        },\n        \"100%\": {\n            transform: \"rotate(360deg)\",\n        },\n    },\n    infoBox: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"70%\",\n        margin: \"0 auto\",\n        marginBottom: \"1rem\",\n        \"& > span\": {\n            fontSize: \"3rem\",\n        },\n        \"& > div\": {\n            paddingLeft: \"1rem\",\n            \"& > p\": {\n                width: \"100%\",\n                textAlign: \"center\",\n                fontSize: \"0.75rem\",\n            },\n        },\n    },\n    divider: {\n        width: \"70%\",\n        margin: \"0 auto\",\n        marginBottom: \"1rem\",\n    },\n    listBox: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        width: \"100%\",\n        margin: \"1rem 0\",\n        listStyle: \"none\",\n        \"& > li\": {\n            height: \"19px\",\n            width: \"25px\",\n            padding: \"2px 0\",\n            margin: \"5px\",\n            fontSize: \"0.625rem\",\n            textAlign: \"center\",\n            cursor: \"pointer\",\n            \"&.correct\": {\n                backgroundColor: \"#89c16e\",\n                border: \"1px solid green\",\n            },\n            \"&.wrong\": {\n                backgroundColor: \"#ff574d\",\n                border: \"1px solid red\",\n            },\n        },\n    },\n    action: {\n        padding: \"10px 15px\",\n        \"& > button\": {\n            float: \"right\",\n        },\n    },\n}));\n\nexport default useStyles;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport * as React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { Box, Button, Divider } from \"@material-ui/core\";\n\nimport QuizQuestionsContext from \"../../context/quiz-questions\";\nimport QuizReportContext from \"../../context/quiz-report\";\n\nimport QuestionTitle from \"../../components/question-title\";\nimport QuestionOption from \"../../components/question-option\";\nimport QuestionInfo from \"../../components/question-info\";\nimport HeaderTitle from \"../../components/title\";\n\nimport useStyles from \"./styled\";\n\nexport default function Quiz() {\n    const [quizQuestions, setQuizQuestions] =\n        React.useContext(QuizQuestionsContext);\n    const [quizReport, setQuizReport] = React.useContext(QuizReportContext);\n    const [feedback, setFeedback] = React.useState(0);\n    const [loading, setLoading] = React.useState(false);\n\n    const navigate = useNavigate();\n    const classes = useStyles();\n\n    function checkAnswer(option) {\n        return option.selected === option.answer;\n    }\n\n    function handleAnswer(value) {\n        setLoading(true);\n        setQuizQuestions((state) => {\n            const current = parseInt(state.current);\n            const answer = state.questions[current].answer;\n\n            if (answer === value) {\n                state.score++;\n            }\n\n            state.questions[current].selected = value;\n\n            return state;\n        });\n\n        setTimeout(() => {\n            const update_quizQuestions = { ...quizQuestions };\n            update_quizQuestions.current++;\n\n            if (\n                update_quizQuestions.current === quizQuestions.questions.length\n            ) {\n                const update_quizReport = [...quizReport];\n\n                update_quizReport.unshift({\n                    questions: [...quizQuestions.questions],\n                    score: quizQuestions.score,\n                    percentage: parseInt(\n                        (quizQuestions.score / quizQuestions.questions.length) *\n                            100\n                    ),\n                    start_at: quizQuestions.start_at,\n                    end_at: new Date().getTime(),\n                });\n\n                setQuizReport(update_quizReport);\n            }\n\n            setQuizQuestions(update_quizQuestions);\n            setLoading(false);\n        }, 1300);\n    }\n\n    return quizQuestions.questions[quizQuestions.current] ? (\n        <React.Fragment>\n            <QuestionTitle\n                index={quizQuestions.current + 1}\n                text={quizQuestions.questions[quizQuestions.current].question}\n            />\n            <QuestionOption\n                effect={true}\n                options={quizQuestions.questions[quizQuestions.current].options}\n                answer={quizQuestions.questions[quizQuestions.current].answer}\n                selected={\n                    quizQuestions.questions[quizQuestions.current].selected\n                }\n                callback={handleAnswer}\n            />\n            <footer className={classes.footer}>\n                <span>\n                    <b>{quizQuestions.score}</b>/\n                    {quizQuestions.questions.length} score\n                </span>\n                {loading && (\n                    <b>\n                        loading next question...\n                        <span className={classes.loading}>⏳</span>\n                    </b>\n                )}\n            </footer>\n        </React.Fragment>\n    ) : (\n        <React.Fragment>\n            <QuestionInfo\n                date={quizReport[0].end_at}\n                cost={\n                    new Date(quizReport[0].end_at - quizReport[0].start_at)\n                        .toISOString()\n                        .split(\"T\")[1]\n                        .split(\".\")[0]\n                }\n                score={quizReport[0].score}\n                total={quizReport[0].questions.length}\n                percentage={parseInt(\n                    (quizReport[0].score / quizReport[0].questions.length) * 100\n                )}\n            />\n            <HeaderTitle text=\"Click on the question to verify\" />\n            <ul className={classes.listBox}>\n                {quizReport[0].questions.map((item, idx) => (\n                    <li\n                        key={idx}\n                        className={\n                            checkAnswer(quizReport[0].questions[idx])\n                                ? \"correct\"\n                                : \"wrong\"\n                        }\n                        onClick={() => setFeedback(idx)}\n                    >\n                        {idx + 1}\n                    </li>\n                ))}\n            </ul>\n            <Divider className={classes.divider} />\n            <QuestionTitle\n                index={feedback + 1}\n                text={quizReport[0].questions[feedback].question}\n            />\n            <QuestionOption\n                options={quizReport[0].questions[feedback].options}\n                answer={quizReport[0].questions[feedback].answer}\n                selected={quizReport[0].questions[feedback].selected}\n            />\n            <Box className={classes.action}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => navigate(\"/\")}\n                >\n                    HOME\n                </Button>\n            </Box>\n        </React.Fragment>\n    );\n}\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n    title: {\n        width: \"100%\",\n        fontSize: \"24px\",\n        fontWeight: 400,\n        textAlign: \"center\",\n    },\n    action: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        width: \"80%\",\n        margin: \"0 auto\",\n    },\n\n    info: {\n        width: \"70%\",\n        margin: \"25px auto\",\n    },\n}));\n\nexport default useStyles;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\nimport * as React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Box, Button, CircularProgress } from \"@material-ui/core\";\n\nimport { QuizSystemContext } from \"../../context/quiz-system\";\nimport { QuizQuestionsContext } from \"../../context/quiz-questions\";\nimport HeaderTitle from \"../../components/title\";\n\nimport useStyles from \"./styled\";\n\nimport opentdb, { mapCategory } from \"../../service/opentdb\";\n\nexport default function Checkout() {\n    const [quizSystem, setQuizSystem] = React.useContext(QuizSystemContext);\n    // eslint-disable-next-line \n    const [_, setQuizQuestions] = React.useContext(QuizQuestionsContext);\n    const [loading, setLoading] = React.useState(false);\n    const navigate = useNavigate();\n    const classes = useStyles();\n\n    async function handleStart() {\n        setLoading(true);\n        opentdb\n            .GetQuestions(quizSystem.amount, quizSystem.category)\n            .then((q) => {\n                setQuizQuestions({\n                    start_at: new Date().getTime(),\n                    score: 0,\n                    current: 0,\n                    questions: q,\n                });\n                setTimeout(() => navigate(\"/quiz\"), 2100);\n            });\n    }\n\n    function handleCancel() {\n        setQuizSystem({ ...quizSystem, checkout: false });\n        navigate(\"/\");\n    }\n    return (\n        <React.Fragment>\n            <HeaderTitle text=\"Press start if you agree.\" />\n            <Box className={classes.info}>\n                <p>\n                    Number of questions: <b>{quizSystem.amount}</b>\n                </p>\n                <p>\n                    Selected category: <b>{mapCategory[quizSystem.category]}</b>\n                </p>\n            </Box>\n            <Box className={classes.action}>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => handleCancel()}\n                >\n                    CANCEL\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => handleStart()}\n                    disabled={loading}\n                >\n                    {loading ? <CircularProgress size=\"24px\" /> : \"START\"}\n                </Button>\n            </Box>\n        </React.Fragment>\n    );\n}\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\n// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n    error: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        textAlign: \"center\",\n        fontSize: \"3rem\",\n        marginBottom: \"1rem\",\n        \"& > p\": {\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n        },\n    },\n    action: {\n        width: \"60%\",\n        margin: \"0 auto\",\n        marginBottom: \"1rem\",\n        \"& > button\": {\n            marginLeft: \"100%\",\n        },\n    },\n}));\n\nexport default useStyles;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport * as React from 'react';\nimport { useNavigate } from 'react-router';\n\nimport { Box, Button } from '@material-ui/core';\n\nimport useStyles from './styled';\n\nexport default function NotFound() {\n    const classes = useStyles();\n    const navigate = useNavigate();\n\n    return (\n        <React.Fragment>\n            <Box className={classes.error}><p><span>😓</span>Not Found</p></Box>\n            <Box className={classes.action}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => navigate(\"/\")}\n                >\n                    HOME\n                </Button>\n            </Box>\n        </React.Fragment>\n    );\n}\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n    divider: {\n        width: \"70%\",\n        margin: \"1.563rem auto\",\n    },\n    error: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        textAlign: \"center\",\n        fontSize: \"3rem\",\n        marginBottom: \"1rem\",\n        \"& > p\": {\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n        },\n    },\n    action: {\n        width: \"60%\",\n        margin: \"0 auto\",\n        marginBottom: \"1rem\",\n        \"& > button\": {\n            marginLeft: \"100%\",\n        },\n    },\n}));\n\nexport default useStyles;\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport * as React from 'react';\nimport {  useNavigate, useParams } from \"react-router-dom\";\n\nimport { Divider } from '@material-ui/core';\n\nimport QuizReportContext from \"../../context/quiz-report\";\n\nimport QuestionTitle from '../../components/question-title';\nimport QuestionOption from '../../components/question-option';\nimport QuestionInfo from '../../components/question-info';\n\nimport NotFound from '../../pages/notfound';\n\nimport useStyles from './styled';\n\nexport default function Report() {\n    const {id} = useParams();\n    const [quizReport] = React.useContext(QuizReportContext);\n    const navigate = useNavigate();\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            { quizReport[id] ? (\n            <React.Fragment>\n                <QuestionInfo\n                    date={quizReport[id].end_at}\n                    cost={new Date(quizReport[id].end_at - quizReport[id].start_at).toISOString()\n                        .split(\"T\")[1]\n                        .split(\".\")[0]}\n                    score={quizReport[id].score}\n                    total={quizReport[id].questions.length}\n                    percentage={parseInt((quizReport[id].score / quizReport[id].questions.length) * 100)}\n               \n                 />\n                 <Divider className={classes.divider}/>\n                {quizReport[id].questions.map((item, idx) => (\n                    <React.Fragment>\n                        <QuestionTitle\n                        index={idx + 1}\n                        text={item.question}\n                        />\n                    <QuestionOption\n                        options={item.options}\n                        answer={item.answer}\n                        selected={\n                            item.selected\n                        }\n                    />\n                    <Divider className={classes.divider}/>\n                 </React.Fragment>\n                ))}\n            </React.Fragment>\n            ) : (\n              <NotFound />\n            )}\n        </React.Fragment>\n    );\n}\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport * as React from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Box, Container, Divider, Typography } from \"@material-ui/core\";\n\nimport Home from \"./pages/home\";\nimport Quiz from \"./pages/quiz\";\nimport Checkout from \"./pages/checkout\";\nimport Report from \"./pages/report\";\nimport NotFound from \"./pages/notfound\";\n\nexport default function App() {\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <Container maxWidth=\"sm\" style={{ marginTop: \"2rem\" }}>\n                <Typography\n                    variant=\"h1\"\n                    align=\"center\"\n                    style={{\n                        width: \"100%\",\n                        fontFamily: \"'Fascinate Inline', cursive\",\n                        fontSize: \"64px\",\n                    }}\n                >\n                    QUIZ\n                </Typography>\n                <Divider />\n                <Box padding=\"10px\">\n                    <BrowserRouter>\n                        <Routes>\n                            <Route exact path=\"/\" element={<Home />} />\n                            <Route path=\"/checkout\" element={<Checkout />} />\n                            <Route path=\"/quiz\" element={<Quiz />} />\n                            <Route path=\"/report/:id\" element={<Report />} />\n                            <Route path=\"*\" element={<NotFound />} />\n                        </Routes>\n                    </BrowserRouter>\n                </Box>\n            </Container>\n        </React.Fragment>\n    );\n}\n","// ┌──────────────────────────────────────────────────────────────────────────────────────────────┐\n// │ Copyright (c) 2021 by the author of the Quiz project. All rights reserved.                   │\n// │ This owner-supplied source code has no limitations on the condition imposed on the           │\n// │ maintenance of the copyright notice.                                                         │\n// │ For more information, read the LICENSE file at the root of the project.                      │\n// │ Written by author Rodney Sostras <rodney.sostras@gmail.com>.                                 │\n// └──────────────────────────────────────────────────────────────────────────────────────────────┘\n\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { QuizSystemContextProvider } from \"./context/quiz-system\";\nimport { QuizReportContextProvider } from \"./context/quiz-report\";\nimport { QuizQuestionsContextProvider } from \"./context/quiz-questions\";\n\nimport \"./theme/globalstyle.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <QuizSystemContextProvider>\n            <QuizReportContextProvider>\n                <QuizQuestionsContextProvider>\n                    <App />\n                </QuizQuestionsContextProvider>\n            </QuizReportContextProvider>\n        </QuizSystemContextProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}